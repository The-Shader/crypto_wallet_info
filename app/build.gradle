apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.fireblade.cryptowallet"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(':repository')

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:${project.kotlin_version}"

    // Mocking
    testImplementation "org.mockito:mockito-core:${project.mockito_version}"
    testImplementation "org.mockito:mockito-inline:${project.mockito_version}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${project.mockito_kotlin_version}"

    // JUnit and Jupiter API
    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_jupiter_version}"
    testImplementation "com.appmattus.fixture:fixture:${project.kotlin_fixtures_version}"
    testImplementation "androidx.test.ext:junit:${project.androidx_test_ext_version}"
    androidTestImplementation "androidx.test:runner:${project.androidx_test_runner_version}"
    androidTestImplementation "androidx.test.ext:junit:${project.androidx_test_ext_version}"
    androidTestImplementation "androidx.test:rules:${project.androidx_test_runner_version}"

    // Espresso and Kakao
    androidTestImplementation "androidx.test.espresso:espresso-core:${project.espresso_version}"
    androidTestImplementation "com.agoda.kakao:kakao:${project.kakao_version}"

    // dagger2
    api "com.google.dagger:dagger:${project.dagger_version}"
    api "com.google.dagger:dagger-android:${project.dagger_version}"
    api "com.google.dagger:dagger-android-support:${project.dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${project.dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${project.dagger_version}"

    // support
    implementation "androidx.core:core-ktx:${project.androidx_core_version}"
    api "androidx.appcompat:appcompat:${project.appcompat_version}"
    api "androidx.constraintlayout:constraintlayout:${project.constraint_version}"
    api "com.google.android.material:material:${project.design_version}"

    // Date desugaring
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:${project.desugar_jdk_version}"

    //rxjava
    implementation "io.reactivex.rxjava3:rxandroid:${project.rxjava_version}"
    implementation "io.reactivex.rxjava3:rxjava:${project.rxjava_version}"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-rx3:${project.kotlinx_coroutines_version}")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactive:${project.kotlinx_coroutines_reactive_version}")

    // Lifecyclescope
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:${project.lifecycle_runtime_ktx_version}")

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:${project.retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${project.retrofit_version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${project.retrofit_version}"

    // Room components
    implementation "androidx.room:room-runtime:${project.room_version}"
    implementation "androidx.room:room-ktx:${project.room_version}"
    kapt "androidx.room:room-compiler:${project.room_version}"
    implementation "androidx.room:room-rxjava2:${project.room_version}"

    api "com.squareup.okhttp3:logging-interceptor:${project.okhttp_interceptor_version}"
    api "com.squareup.okhttp3:okhttp:${project.okhttp_version}"

    // groupie
    implementation "com.xwray:groupie:${project.groupie_version}"
    implementation "com.xwray:groupie-kotlin-android-extensions:${project.groupie_version}"

    // Orbit2
//    implementation("org.orbit-mvi:orbit-rxjava3:${project.orbit_version}")
    implementation("org.orbit-mvi:orbit-core:${project.orbit_version}")
    implementation("org.orbit-mvi:orbit-viewmodel:${project.orbit_version}")
//    implementation("org.orbit-mvi:orbit-livedata:${project.orbit_version}")
    testImplementation("org.orbit-mvi:orbit-test:${project.orbit_version}")

}